/**
 * css.js
 * jquery.min.css.js v0.1.1
 * Copyright 2014 BOX Creative, LLC
 * Code licensed under MIT:
 * https://github.com/twbs/bootstrap/blob/master/LICENSE
 */
(function($){function CssJs(){function parseStyleSheets(){$.each(document.styleSheets,function(e,t){$.each(t.cssRules,function(e,t){if(t instanceof CSSStyleRule){var n=t.style.content;if(n.indexOf("'")===0||n.indexOf('"')===0)n=n.replace(/^\'|\'$|^\"|\"$|\\/g,"");if(n.length<3)return true;var r=t.selectorText;if(r.search(/\:(before|after)$/)>-1)return true;var i=r.search(/^\-.*\-$/g)>-1;n=parseTokens(n);Dict[i?"evals":"selectors"][r]=n}})})}function syntax(e,t,n){t=typeof t=="undefined"?false:t;n=typeof n=="undefined"?false:n;e=e.replace(/^\s*|\s*$/g,"");if(t&&e.search(/^var\s{1,}/g)===-1)e="var "+e;if(n&&e.search(/\;$/g)===-1)e+=";";return e}function parseCode(e){var t=e.match(/\!*[\w]{1,}\([\w\s\,]{1,}\)/g);if(t==null)t=[];var n=e;for(var r in t)n=n.split(t[r]).join("");n=n.replace(/^\s*|\s*$/g,"");if(n){var i="INLINE-EACH-EVENT-"+Dict.customEachCount;Dict.evals["-"+i+"-"]=n;Dict.customEachCount++;t.push("each("+i+")")}var s=[];for(var o in t){var u=t[o].replace(/\)$/g,"").split("(");var a={name:u[0],args:u[1].split(/\,\s*/g),preventDefault:false};var f=a.name.indexOf("!")===0;if(f){a.name=a.name.replace(/^\!/g,"");a.preventDefault=true}s.push(a)}return s}function parseTokens(e){for(var t in tokens)e=e.split(t).join(tokens[t]);return e}this.firstRun=true;this.data={};var Dict={selectors:{},evals:{},customEachCount:0};var tokens={"timeout({":"setTimeout(func(){",".scroll({":".scroll(func(){",".each({":".scroll(func(){","func(":"function("};this.init=function(){parseStyleSheets();this.bind(true)};this.update=function(){this.bind(false)};this.addToken=function(e,t){if(typeof e==="object"&&typeof t===UND){tokens=$.extend(tokens,e);return}else if(typeof t===UND||typeof t===UND){return}if(typeof e!=="string")e=e.toString();if(typeof t!=="string")t=t.toString();tokens[e]=t};this.bind=function(){var self=this,CSSJS=self,returned;var $document=$(document),$window=$(window);for(var _eval in Dict.evals){if(_eval.toLowerCase().indexOf("-vars")===0){eval(syntax(Dict.evals[_eval],true,true))}}$.each(Dict.selectors,function(selector,events){var $selector=false;switch(selector){case"document":$selector=$document;break;case"window":$selector=$window;break;default:$selector=$(selector)}if(!$selector||!$selector.length)return true;var fns=parseCode(events);for(var f in fns){var fn=fns[f];$.each(fn.args,function(i,funcName){var eventBinding=fn.name+"."+funcName;if(fn.name!="each"){$selector.data("CssJs",{preventDefault:fn.preventDefault});$selector.bind(eventBinding,function(event){var $this=$(this);var data=$this.data("CssJs");if(data.preventDefault)event.preventDefault();var code=Dict.evals["-"+funcName+"-"];if(typeof code==="undefined")code=Dict.evals["-"+funcName.toLowerCase()+"-"];code="var response = (function(event){"+code+"}(event));";code=syntax(code);eval(code);if(typeof response!=="undefined")returned=response;if(data.preventDefault)return false})}else if(fn.name=="each"){$selector.each(function(key,event){var $this=$(this);var code=Dict.evals["-"+funcName+"-"];if(typeof code=="undefined")code=Dict.evals["-"+funcName.toLowerCase()+"-"];eval(code)})}if(self.firstRun&&fn.name=="ready"&&$selector==$document){$selector.trigger(fn.name+"."+funcName)}})}});self.firstRun=true};}$(function(){var e=new CssJs;e.init()})})(jQuery)
